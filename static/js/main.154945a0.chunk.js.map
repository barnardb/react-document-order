{"version":3,"sources":["../../src/Context.ts","../../src/operations.ts","../../src/OrderedValues.tsx","ReadmeExample.tsx","ToDoList.tsx","TrivialExample.tsx","App.tsx","index.tsx"],"names":["contextSignifier","Symbol","isContext","node","firstValue","context","startIndex","result","lastValue","length","nonNull","Error","registerChangeOnRoot","createOrderedValues","reactContext","React","changeIndicatorReactContext","useContext","Provider","children","useReducer","changeIndicator","registerChange","parent","useMemo","createContext","useLayoutEffect","i","value","useRegister","t","useValueAfter","firstValueAfterReference","reference","useRoot","useValueBefore","firstValueBeforeReference","useFirst","useLast","root","MyCollection","ReadmeExample","MyFormContent","useState","email","setEmail","style","display","flexDirection","MyInput","label","onChange","endsWith","ref","useRef","placeholder","e","target","useUpDownBehaviour","previous","next","onKeyDownCapture","nativeEvent","key","preventDefault","current","focus","ControlOrder","first","last","metaKey","Item","onRemove","onClick","marginLeft","borderLeft","paddingLeft","addLabel","AddButton","List","ids","nextId","setState","map","id","slice","ToDoList","LabelOrder","Label","name","console","log","TrivialExample","labels","middleLables","addMiddleLabel","l","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.154945a0.chunk.js","sourcesContent":["const contextSignifier = Symbol('OrderedValues Context signifier')\n\nexport type Node<T> = T | Context<T>\n\nexport interface Context<T> {\n  readonly [contextSignifier]: undefined\n  readonly nodes: Node<T>[]\n\n  parent: Context<T> | null\n\n  registerChange: React.Dispatch<unknown>\n}\n\nexport function createContext<T>(\n  registerChange: React.Dispatch<unknown>,\n): Context<T> {\n  return {\n    [contextSignifier]: undefined,\n    nodes: [],\n    parent: null,\n    registerChange,\n  }\n}\n\nexport function isContext<T>(node: Node<T>): node is Context<T> {\n  return typeof node === 'object' && contextSignifier in node\n}\n","import { Context, isContext } from './Context'\n\nexport function firstValue<T>(\n  context: Context<T>,\n  startIndex: number,\n): T | null {\n  while (startIndex < context.nodes.length) {\n    const node = context.nodes[startIndex]\n    const result = isContext(node) ? firstValue(node, 0) : node\n    if (result !== null && result !== undefined) return result\n    ++startIndex\n  }\n  return null\n}\n\nexport function lastValue<T>(context: Context<T>, length: number): T | null {\n  while (--length >= 0) {\n    const node = context.nodes[length]\n    const result = isContext(node) ? lastValue(node, node.nodes.length) : node\n    if (result !== null && result !== undefined) return result\n  }\n  return null\n}\n\nexport function firstValueAfterReference<T>(\n  context: Context<T>,\n  reference: T,\n): T | null | undefined {\n  for (let i = 0; i < context.nodes.length; i++) {\n    const node = context.nodes[i]\n    if (isContext(node)) {\n      const result = firstValueAfterReference(node, reference)\n      if (result === undefined) continue\n      if (result !== null) return result\n    } else if (node !== reference) {\n      continue\n    }\n    return firstValue(context, i + 1)\n  }\n  return undefined\n}\n\nexport function firstValueBeforeReference<T>(\n  context: Context<T>,\n  reference: T,\n): T | null | undefined {\n  for (let i = context.nodes.length - 1; i >= 0; i--) {\n    const node = context.nodes[i]\n    if (isContext(node)) {\n      const result = firstValueBeforeReference(node, reference)\n      if (result === undefined) continue\n      if (result !== null) return result\n    } else if (node !== reference) {\n      continue\n    }\n    return lastValue(context, i)\n  }\n  return undefined\n}\n","import React, { useContext, useLayoutEffect, useMemo, useReducer } from 'react'\nimport { Context, createContext } from './Context'\nimport {\n  firstValue,\n  firstValueAfterReference,\n  firstValueBeforeReference,\n  lastValue,\n} from './operations'\n\nexport interface OrderedValues<T> {\n  Provider: React.FunctionComponent<{}>\n  useRegister: (value: T) => void\n\n  useValueAfter: (reference: T) => T | null | undefined\n  useValueBefore: (reference: T) => T | null | undefined\n  useFirst: () => T | null\n  useLast: () => T | null\n}\n\nfunction nonNull<T>(context: Context<T> | null): Context<T> {\n  if (!context)\n    throw new Error(\n      \"OrderedValues hooks can only be used within one of the OrderedValues's <Context/>s\",\n    )\n  return context\n}\n\nfunction registerChangeOnRoot(context: Context<unknown>): void {\n  context.parent\n    ? registerChangeOnRoot(context.parent)\n    : context.registerChange(undefined)\n}\n\nexport function createOrderedValues<T>(): Readonly<\n  OrderedValues<NonNullable<T>>\n> {\n  const reactContext = React.createContext<Context<NonNullable<T>> | null>(null)\n  const changeIndicatorReactContext = React.createContext<unknown>(null)\n\n  function useRoot(): Context<NonNullable<T>> {\n    let context = nonNull(useContext(reactContext))\n    while (context.parent) context = context.parent\n    return context\n  }\n\n  return {\n    Provider: function OrderedValuesProvider({ children }) {\n      const [changeIndicator, registerChange] = useReducer(\n        (counter: number) => ++counter,\n        0,\n      )\n\n      const parent = useContext(reactContext)\n      const context = useMemo<Context<NonNullable<T>>>(\n        () => createContext(registerChange),\n        [],\n      )\n\n      // Add context to parent before children are mounted\n      useMemo(() => {\n        if (!parent) return\n        context.parent = parent\n        parent.nodes.push(context)\n      }, [parent])\n\n      useLayoutEffect(() => {\n        if (!parent) return\n        registerChangeOnRoot(context)\n        return () => {\n          // Remove context from parent\n          const i = parent.nodes.indexOf(context)\n          i > -1 && parent.nodes.splice(i, 1)\n          if (context.parent === parent) context.parent = null\n        }\n      }, [parent])\n\n      return (\n        <reactContext.Provider value={context}>\n          {parent ? (\n            children\n          ) : (\n            <changeIndicatorReactContext.Provider value={changeIndicator}>\n              {children}\n            </changeIndicatorReactContext.Provider>\n          )}\n        </reactContext.Provider>\n      )\n    },\n\n    useRegister: function useRegister(t: NonNullable<T>): void {\n      const context = nonNull(useContext(reactContext))\n      useMemo(() => {\n        // Register ourself with the context\n        context.nodes.push(t)\n      }, [context, t])\n      useLayoutEffect(() => {\n        registerChangeOnRoot(context)\n        return () => {\n          // Remove ourself from the context\n          for (let i = context.nodes.length - 1; i >= 0; --i)\n            if (context.nodes[i] === t) {\n              context.nodes.splice(i, 1)\n              registerChangeOnRoot(context)\n              return\n            }\n        }\n      }, [context, t])\n    },\n\n    useValueAfter: function useValueAfter(\n      reference: NonNullable<T>,\n    ): NonNullable<T> | null | undefined {\n      useContext(changeIndicatorReactContext)\n      return firstValueAfterReference(useRoot(), reference)\n    },\n\n    useValueBefore: function useValueBefore(\n      reference: NonNullable<T>,\n    ): NonNullable<T> | null | undefined {\n      useContext(changeIndicatorReactContext)\n      return firstValueBeforeReference(useRoot(), reference)\n    },\n\n    useFirst: function useFirst(): NonNullable<T> | null {\n      useContext(changeIndicatorReactContext)\n      return firstValue(useRoot(), 0)\n    },\n\n    useLast: function useLast(): NonNullable<T> | null {\n      useContext(changeIndicatorReactContext)\n      const root = useRoot()\n      return lastValue(root, root.nodes.length)\n    },\n  }\n}\n","/**\n * Implements the example shown in the [README.md]{@link ../../README.md}.\n * \n * The imports are pulled to the top to satisfy the powers that be.\n */\n\nimport { RefObject } from 'react'\nimport { createOrderedValues } from 'react-document-order'\nimport React from 'react'\nimport { useState } from 'react'\nimport { useRef } from 'react'\nimport { SyntheticEvent } from 'react'\n\n// Start by calling `createOrderedValues()` to create a document-ordered collection.\n\nconst MyCollection = createOrderedValues<RefObject<HTMLElement>>()\n\n// The `OrderedValues` it returns provides the interface for the library.\n\n\nexport interface OrderedValues<T> {\n  Provider: React.FunctionComponent<{}>\n  useRegister: (value: T) => void\n\n  useValueAfter: (reference: T) => T | null | undefined\n  useValueBefore: (reference: T) => T | null | undefined\n  useFirst: () => T | null\n  useLast: () => T | null\n}\n\n// Use a `Provider` around your overall collection.\n\nexport default function ReadmeExample() {\n  return (\n    <MyCollection.Provider>\n      <MyFormContent />\n    </MyCollection.Provider>\n  )\n}\n\n// The library assumes that controls are always added at the end of their nearest `Provider` ancestor,\n// so also put a `Provider` around any section where items might get dynamically added to your collection.\n\nfunction MyFormContent() {\n  const [email, setEmail] = useState(\"\")\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <MyInput label=\"Name\" />\n      <MyInput label=\"Email Address\" onChange={setEmail} />\n      <MyCollection.Provider>\n        {email.endsWith(\"@example.com\") && <MyInput label=\"Position at Example Corp.\" />}\n      </MyCollection.Provider>\n      <MyInput label=\"Favourite Fruit\" />\n    </div>\n  )\n}\n\n// Add elements to your collection by calling `register()`.\n\nfunction MyInput({ label, onChange }: { label: string, onChange?: (value: string) => void }) {\n  const ref = useRef<HTMLInputElement>(null)\n  MyCollection.useRegister(ref)\n  return (\n    <input\n      placeholder={label}\n      onChange={onChange && (e => onChange(e.target.value))}\n      ref={ref}\n      {...useUpDownBehaviour(ref)}\n    />\n  )\n}\n\n// Then you can use the other functions on `OrderedValues` to your advantage.\n\nconst useUpDownBehaviour = (ref: RefObject<HTMLElement>) => {\n  const previous = MyCollection.useValueBefore(ref)\n  const next = MyCollection.useValueAfter(ref)\n  return {\n    onKeyDownCapture: (e: SyntheticEvent<HTMLElement, KeyboardEvent>) => {\n      if (e.nativeEvent.key === \"ArrowUp\") {\n        e.preventDefault();\n        previous?.current?.focus()\n      } else if (e.nativeEvent.key === \"ArrowDown\") {\n        e.preventDefault();\n        next?.current?.focus()\n      }\n    }\n  }\n}\n","import React, { RefObject, SyntheticEvent, useRef, useState } from 'react'\nimport { createOrderedValues } from 'react-document-order'\n\nconst ControlOrder = createOrderedValues<RefObject<HTMLElement>>()\n\nconst useUpDownBehaviour = (ref: RefObject<HTMLElement>) => {\n  const first = ControlOrder.useFirst()\n  const previous = ControlOrder.useValueBefore(ref)\n  const next = ControlOrder.useValueAfter(ref)\n  const last = ControlOrder.useLast()\n  return {\n    onKeyDownCapture: (e: SyntheticEvent<HTMLElement, KeyboardEvent>) => {\n      if (e.nativeEvent.key === \"ArrowUp\") {\n        e.preventDefault();\n        (e.nativeEvent.metaKey ? first : previous)?.current?.focus()\n      } else if (e.nativeEvent.key === \"ArrowDown\") {\n        e.preventDefault();\n        (e.nativeEvent.metaKey ? last : next)?.current?.focus()\n      }\n    }\n  }\n}\n\nconst Item = ({ onRemove }: { onRemove: () => void }) => {\n  const ref = useRef<HTMLInputElement>(null)\n  ControlOrder.useRegister(ref)\n  return <div>\n    <div style={{ flexDirection: \"row\" }}>\n      <input ref={ref} {...useUpDownBehaviour(ref)} />\n      <button onClick={onRemove}>x</button>\n    </div>\n    <div style={{ marginLeft: \"5px\", borderLeft: \"5px solid lightgray\", paddingLeft: \"5px\" }}>\n      <List addLabel=\"Add sub-item\" />\n    </div>\n  </div>\n}\n\nconst AddButton = ({ label, onClick }: { label: string, onClick: () => void }) => {\n  const ref = useRef<HTMLButtonElement>(null)\n  ControlOrder.useRegister(ref)\n  return <button ref={ref} onClick={onClick} {...useUpDownBehaviour(ref)}>{label}</button>\n}\n\nconst List = ({ addLabel }: { addLabel: string }) => {\n  const [{ ids, nextId }, setState] = useState({ ids: [] as ReadonlyArray<number>, nextId: 0 })\n  return (\n    <div style={{ flexDirection: \"column\" }}>\n      <ControlOrder.Provider>\n        {ids.map((id, i) =>\n          <div key={id} style={{ flexDirection: \"row\" }}>\n            <Item onRemove={() => setState({ ids: [...ids.slice(0, i), ...ids.slice(i + 1)], nextId })} />\n          </div>\n        )}\n      </ControlOrder.Provider>\n      <AddButton label={addLabel} onClick={() => setState({ ids: [...ids, nextId], nextId: nextId + 1 })} />\n    </div>\n  )\n}\n\nexport default function ToDoList() {\n  return (\n    <ControlOrder.Provider>\n      <p>\n        Squint hard enough, and it's a hierarchical to-do list UI.\n      </p>\n      <p>\n        Anyway, hit a few add buttons in various orders, and then see how you can use the arrow kets to\n        navigate up and down among the text inputs and add-buttons in document order.\n        Use the meta key (command key on MacOS) to move to the top or bottom of the controls in the list.\n      </p>\n      <List addLabel=\"Add top-level item\" />\n    </ControlOrder.Provider>\n  )\n}\n","import React, { useReducer } from 'react'\nimport { createOrderedValues } from 'react-document-order'\n\nconst LabelOrder = createOrderedValues<string>()\n\nconst Label = ({ name }: { name: string }) => {\n  LabelOrder.useRegister(name)\n  const next = LabelOrder.useValueAfter(name)\n  console.log(\"BEHOLD\", name, next)\n  return <div>Label {name} followed by {next}</div>\n}\n\nexport default function TrivialExample() {\n  const [middleLables, addMiddleLabel] = useReducer(([...labels], label: string) => [...labels, label], [\"baz\"])\n\n  return (\n    <LabelOrder.Provider>\n      <Label name=\"foo\" />\n      <LabelOrder.Provider>\n        {middleLables.map(l => <Label key={l} name={l} />)}\n      </LabelOrder.Provider>\n      <Label name=\"bar\" />\n      <button onClick={() => addMiddleLabel(`new middle label ${middleLables.length}`)}>Add</button>\n    </LabelOrder.Provider>\n  )\n}\n","import React from 'react'\nimport ReadmeExample from './ReadmeExample'\nimport ToDoList from './ToDoList'\nimport TrivialExample from './TrivialExample'\n\nconst App = () => {\n  return (\n    <div>\n      <h1><code>react-document-order</code> Demo</h1>\n\n      <section>\n        <h2>Readme Example</h2>\n        <p>Use the up and down arrow keys to move between fields,\n          with and without an email address ending in \"@example.com\".</p>\n        <ReadmeExample />\n      </section>\n\n      <section>\n        <h2>Trivial Example</h2>\n        <p>Look at the code to see how each label refers to the next label.</p>\n        <TrivialExample />\n      </section>\n\n      <section>\n        <h2>Hierarchical To-Do List</h2>\n        <ToDoList />\n      </section>\n\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}